package br.edu.ufam.scfpcu.model;
// Generated Jan 13, 2014 5:46:24 PM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Veiculo generated by hbm2java
 */
@Entity
@Table(name = "veiculo", catalog = "scfpcu", uniqueConstraints = @UniqueConstraint(columnNames = "Placa_atual"))
public class Veiculo implements java.io.Serializable {

	private Integer idVeiculo;
	private Cor cor;
	private Usuario usuario;
	private Cidades cidadesByIdCidadePatual;
	private TipoCombustivel tipoCombustivel;
	private Modelo modelo;
	private Especie especie;
	private Grupo grupo;
	private Cidades cidadesByIdCidadePanterior;
	private Entidade entidade;
	private int anoFabricacao;
	private int anoModelo;
	private Integer potencia;
	private String numPatrimonio;
	private String chassi;
	private int codRenavam;
	private String adquiridoDe;
	private Date dataDeAquisicao;
	private String modalidadeAquisicao;
	private Double valorDaAquisicao;
	private String observacao;
	private String placaAnterior;
	private String placaAtual;
	private Date dataCadastro;
	private Set<Gastos> gastoses = new HashSet<Gastos>(0);

	public Veiculo() {
	}

	public Veiculo(Cor cor, Cidades cidadesByIdCidadePatual,
			TipoCombustivel tipoCombustivel, Modelo modelo, Especie especie,
			Grupo grupo, Entidade entidade, int anoFabricacao, int anoModelo,
			String chassi, int codRenavam, String placaAtual) {
		this.cor = cor;
		this.cidadesByIdCidadePatual = cidadesByIdCidadePatual;
		this.tipoCombustivel = tipoCombustivel;
		this.modelo = modelo;
		this.especie = especie;
		this.grupo = grupo;
		this.entidade = entidade;
		this.anoFabricacao = anoFabricacao;
		this.anoModelo = anoModelo;
		this.chassi = chassi;
		this.codRenavam = codRenavam;
		this.placaAtual = placaAtual;
	}
	public Veiculo(Cor cor, Usuario usuario, Cidades cidadesByIdCidadePatual,
			TipoCombustivel tipoCombustivel, Modelo modelo, Especie especie,
			Grupo grupo, Cidades cidadesByIdCidadePanterior, Entidade entidade,
			int anoFabricacao, int anoModelo, Integer potencia,
			String numPatrimonio, String chassi, int codRenavam,
			String adquiridoDe, Date dataDeAquisicao,
			String modalidadeAquisicao, Double valorDaAquisicao,
			String observacao, String placaAnterior, String placaAtual,
			Date dataCadastro, Set<Gastos> gastoses) {
		this.cor = cor;
		this.usuario = usuario;
		this.cidadesByIdCidadePatual = cidadesByIdCidadePatual;
		this.tipoCombustivel = tipoCombustivel;
		this.modelo = modelo;
		this.especie = especie;
		this.grupo = grupo;
		this.cidadesByIdCidadePanterior = cidadesByIdCidadePanterior;
		this.entidade = entidade;
		this.anoFabricacao = anoFabricacao;
		this.anoModelo = anoModelo;
		this.potencia = potencia;
		this.numPatrimonio = numPatrimonio;
		this.chassi = chassi;
		this.codRenavam = codRenavam;
		this.adquiridoDe = adquiridoDe;
		this.dataDeAquisicao = dataDeAquisicao;
		this.modalidadeAquisicao = modalidadeAquisicao;
		this.valorDaAquisicao = valorDaAquisicao;
		this.observacao = observacao;
		this.placaAnterior = placaAnterior;
		this.placaAtual = placaAtual;
		this.dataCadastro = dataCadastro;
		this.gastoses = gastoses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_veiculo", unique = true, nullable = false)
	public Integer getIdVeiculo() {
		return this.idVeiculo;
	}

	public void setIdVeiculo(Integer idVeiculo) {
		this.idVeiculo = idVeiculo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_cor", nullable = false)
	@NotNull
	public Cor getCor() {
		return this.cor;
	}

	public void setCor(Cor cor) {
		this.cor = cor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_servidor")
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_cidade_patual", nullable = false)
	@NotNull
	public Cidades getCidadesByIdCidadePatual() {
		return this.cidadesByIdCidadePatual;
	}

	public void setCidadesByIdCidadePatual(Cidades cidadesByIdCidadePatual) {
		this.cidadesByIdCidadePatual = cidadesByIdCidadePatual;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_combustivel", nullable = false)
	@NotNull
	public TipoCombustivel getTipoCombustivel() {
		return this.tipoCombustivel;
	}

	public void setTipoCombustivel(TipoCombustivel tipoCombustivel) {
		this.tipoCombustivel = tipoCombustivel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_modelo", nullable = false)
	@NotNull
	public Modelo getModelo() {
		return this.modelo;
	}

	public void setModelo(Modelo modelo) {
		this.modelo = modelo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_especie", nullable = false)
	@NotNull
	public Especie getEspecie() {
		return this.especie;
	}

	public void setEspecie(Especie especie) {
		this.especie = especie;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_grupo", nullable = false)
	@NotNull
	public Grupo getGrupo() {
		return this.grupo;
	}

	public void setGrupo(Grupo grupo) {
		this.grupo = grupo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_cidade_panterior")
	public Cidades getCidadesByIdCidadePanterior() {
		return this.cidadesByIdCidadePanterior;
	}

	public void setCidadesByIdCidadePanterior(Cidades cidadesByIdCidadePanterior) {
		this.cidadesByIdCidadePanterior = cidadesByIdCidadePanterior;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_entidade", nullable = false)
	@NotNull
	public Entidade getEntidade() {
		return this.entidade;
	}

	public void setEntidade(Entidade entidade) {
		this.entidade = entidade;
	}

	@Column(name = "Ano_fabricacao", nullable = false)
	public int getAnoFabricacao() {
		return this.anoFabricacao;
	}

	public void setAnoFabricacao(int anoFabricacao) {
		this.anoFabricacao = anoFabricacao;
	}

	@Column(name = "Ano_modelo", nullable = false)
	public int getAnoModelo() {
		return this.anoModelo;
	}

	public void setAnoModelo(int anoModelo) {
		this.anoModelo = anoModelo;
	}

	@Column(name = "Potencia")
	public Integer getPotencia() {
		return this.potencia;
	}

	public void setPotencia(Integer potencia) {
		this.potencia = potencia;
	}

	@Column(name = "Num_patrimonio", length = 10)
	@Length(max = 10)
	public String getNumPatrimonio() {
		return this.numPatrimonio;
	}

	public void setNumPatrimonio(String numPatrimonio) {
		this.numPatrimonio = numPatrimonio;
	}

	@Column(name = "Chassi", nullable = false, length = 17)
	@NotNull
	@Length(max = 17)
	public String getChassi() {
		return this.chassi;
	}

	public void setChassi(String chassi) {
		this.chassi = chassi;
	}

	@Column(name = "Cod_renavam", nullable = false)
	public int getCodRenavam() {
		return this.codRenavam;
	}

	public void setCodRenavam(int codRenavam) {
		this.codRenavam = codRenavam;
	}

	@Column(name = "Adquirido_de", length = 100)
	@Length(max = 100)
	public String getAdquiridoDe() {
		return this.adquiridoDe;
	}

	public void setAdquiridoDe(String adquiridoDe) {
		this.adquiridoDe = adquiridoDe;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Data_de_aquisicao", length = 10)
	public Date getDataDeAquisicao() {
		return this.dataDeAquisicao;
	}

	public void setDataDeAquisicao(Date dataDeAquisicao) {
		this.dataDeAquisicao = dataDeAquisicao;
	}

	@Column(name = "Modalidade_aquisicao", length = 10)
	@Length(max = 10)
	public String getModalidadeAquisicao() {
		return this.modalidadeAquisicao;
	}

	public void setModalidadeAquisicao(String modalidadeAquisicao) {
		this.modalidadeAquisicao = modalidadeAquisicao;
	}

	@Column(name = "Valor_da_aquisicao", precision = 22, scale = 0)
	public Double getValorDaAquisicao() {
		return this.valorDaAquisicao;
	}

	public void setValorDaAquisicao(Double valorDaAquisicao) {
		this.valorDaAquisicao = valorDaAquisicao;
	}

	@Column(name = "Observacao", length = 65535)
	@Length(max = 65535)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Column(name = "Placa_anterior", length = 10)
	@Length(max = 10)
	public String getPlacaAnterior() {
		return this.placaAnterior;
	}

	public void setPlacaAnterior(String placaAnterior) {
		this.placaAnterior = placaAnterior;
	}

	@Column(name = "Placa_atual", unique = true, nullable = false, length = 10)
	@NotNull
	@Length(max = 10)
	public String getPlacaAtual() {
		return this.placaAtual;
	}

	public void setPlacaAtual(String placaAtual) {
		this.placaAtual = placaAtual;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Data_cadastro", length = 10)
	public Date getDataCadastro() {
		return this.dataCadastro;
	}

	public void setDataCadastro(Date dataCadastro) {
		this.dataCadastro = dataCadastro;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "veiculo")
	public Set<Gastos> getGastoses() {
		return this.gastoses;
	}

	public void setGastoses(Set<Gastos> gastoses) {
		this.gastoses = gastoses;
	}

}
